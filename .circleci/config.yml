defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8.5

version: 2
jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - node_modules

  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: yarn lint
      - run: yarn test --ci
      - run: bash <(curl -s https://codecov.io/bash)

  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn build
      - run: yarn build-storybook
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist
            - storybook-static

  deploy-branch:
    #
    # specific dev branches are deployed in their own "<branch>" directory
    #
    <<: *defaults
    filters:
      branches:
        only:
          - quasar
    steps:
      - run: sudo apt install -y rsync
      - checkout
      - attach_workspace:
          at: ~/repo
      - deploy:
          name: Dev Branch Deploy
          command: |
            ./deploy.sh "${CIRCLE_BRANCH}" "${CIRCLE_BRANCH}"

  deploy_tag:
    #
    # all tags are considered releases and go into "release" directory
    #
    <<: *defaults
    filters:
      tags:
        only: /.*/
    steps:
      - run: sudo apt install -y rsync
      - checkout
      - attach_workspace:
          at: ~/repo
      - deploy:
          name: Release Tag Deploy
          command: |
            ./deploy.sh "${CIRCLE_TAG}" release

workflows:
  version: 2
  all-the-things:
    jobs:
      - install-dependencies
      - test:
          requires:
            - install-dependencies
      - build:
          requires:
            - install-dependencies
      - deploy-branch:
          requires:
            - test
            - build
      - deploy-tag:
          requires:
            - test
            - build
